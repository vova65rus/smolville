const express = require('express');
const axios = require('axios');

const app = express();
const port = process.env.PORT || 3000;

app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
  if (req.method === 'OPTIONS') return res.sendStatus(200);
  next();
});

app.use(express.json());

// UUID –±–∞–∑—ã –∫–æ—Ç–æ—Ä—ã–π –º—ã –Ω–∞—à–ª–∏!
const SEA_TABLE_BASE_UUID = '1e24960e-ac5a-43b6-8269-e6376b16577a';
const SEATABLE_API_TOKEN = process.env.SEATABLE_API_TOKEN || '622c69aab356a1e53f3994f234c1e4a98f77f656';

app.get('/', (req, res) => {
  res.send(`
    <html>
      <head><title>Smolville - –°–æ–∑–¥–∞–Ω–∏–µ API —Ç–æ–∫–µ–Ω–∞</title></head>
      <body>
        <h1>üîë –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω</h1>
        <p><strong>UUID –±–∞–∑—ã:</strong> ${SEA_TABLE_BASE_UUID}</p>
        
        <h2>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h2>
        <ol>
          <li>–û—Ç–∫—Ä–æ–π—Ç–µ –±–∞–∑—É: <a href="https://cloud.seatable.io/workspace/89387/dtable/Smolville/" target="_blank">Smolville</a></li>
          <li>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ (—à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∞) ‚Üí <strong>–í–Ω–µ—à–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</strong></li>
          <li>–ù–∞–∂–º–∏—Ç–µ <strong>API —Ç–æ–∫–µ–Ω</strong></li>
          <li>–ù–∞–∂–º–∏—Ç–µ <strong>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω</strong></li>
          <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω</li>
          <li>–û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ Render</li>
        </ol>
        
        <h3>–¢–µ—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ–∫–µ–Ω–∞:</h3>
        <p><a href="/api/test-current">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω</a></p>
        
        <h3>–¢–µ—Å—Ç —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º:</h3>
        <form action="/api/test-token" method="get">
          <input type="text" name="token" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω" style="width: 300px; padding: 8px;">
          <button type="submit" style="padding: 8px 16px;">–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
        </form>
      </body>
    </html>
  `);
});

// –¢–µ—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ–∫–µ–Ω–∞
app.get('/api/test-current', async (req, res) => {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π API —Ç–æ–∫–µ–Ω...');
    
    const response = await axios.get(
      `https://cloud.seatable.io/api/v2.1/dtable/app-api/${SEA_TABLE_BASE_UUID}/rows/?table_name=Events`,
      {
        headers: {
          'Authorization': `Token ${SEATABLE_API_TOKEN}`,
          'Content-Type': 'application/json'
        },
        timeout: 5000
      }
    );

    res.json({
      success: true,
      message: '‚úÖ –¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –†–ê–ë–û–¢–ê–ï–¢!',
      eventsCount: response.data.rows ? response.data.rows.length : 0,
      data: response.data.rows ? response.data.rows.slice(0, 2) : []
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    
    let diagnosis = '';
    if (error.response && error.response.status === 403) {
      diagnosis = '–¢–æ–∫–µ–Ω –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ';
    } else if (error.response && error.response.status === 404) {
      diagnosis = '–ë–∞–∑–∞ –∏–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
    } else if (error.code === 'ECONNABORTED') {
      diagnosis = '–¢–∞–π–º–∞—É—Ç - —Ç–æ–∫–µ–Ω –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω';
    }
    
    res.status(500).json({
      success: false,
      error: error.message,
      diagnosis: diagnosis,
      instructions: [
        '1. –°–æ–∑–¥–∞–π—Ç–µ –ù–û–í–´–ô API —Ç–æ–∫–µ–Ω –¥–ª—è –±–∞–∑—ã Smolville',
        '2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–æ–∑–¥–∞–µ—Ç–µ —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –±–∞–∑—ã',
        '3. –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å',
        '4. –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é SEATABLE_API_TOKEN –≤ Render'
      ]
    });
  }
});

// –¢–µ—Å—Ç —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
app.get('/api/test-token', async (req, res) => {
  const newToken = req.query.token;
  
  if (!newToken) {
    return res.json({
      error: '–£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω: /api/test-token?token=–í–ê–®_–ù–û–í–´–ô_–¢–û–ö–ï–ù'
    });
  }

  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω...');
    
    const response = await axios.get(
      `https://cloud.seatable.io/api/v2.1/dtable/app-api/${SEA_TABLE_BASE_UUID}/rows/?table_name=Events`,
      {
        headers: {
          'Authorization': `Token ${newToken}`,
          'Content-Type': 'application/json'
        },
        timeout: 5000
      }
    );

    res.json({
      success: true,
      message: '‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –†–ê–ë–û–¢–ê–ï–¢!',
      eventsCount: response.data.rows ? response.data.rows.length : 0,
      nextSteps: [
        `–û–±–Ω–æ–≤–∏—Ç–µ –≤ Render: SEATABLE_API_TOKEN=${newToken}`,
        `SEATABLE_BASE_UUID=${SEA_TABLE_BASE_UUID}`,
        '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Render'
      ],
      sampleData: response.data.rows ? response.data.rows.slice(0, 2) : []
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞:', error.message);
    
    res.status(500).json({
      success: false,
      error: error.message,
      troubleshooting: [
        '1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–æ–∑–¥–∞–ª–∏ —Ç–æ–∫–µ–Ω –¥–ª—è –±–∞–∑—ã Smolville',
        '2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏ —Ç–æ–∫–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é',
        '3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω —Ç–æ–∫–µ–Ω',
        '4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ "Events" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ'
      ]
    });
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ
app.get('/api/check-tables', async (req, res) => {
  const testToken = req.query.token || SEATABLE_API_TOKEN;
  const tables = ['Events', 'Ads', 'Votings'];
  const results = {};

  for (const table of tables) {
    try {
      const response = await axios.get(
        `https://cloud.seatable.io/api/v2.1/dtable/app-api/${SEA_TABLE_BASE_UUID}/rows/?table_name=${table}`,
        {
          headers: {
            'Authorization': `Token ${testToken}`,
            'Content-Type': 'application/json'
          },
          timeout: 5000
        }
      );

      results[table] = {
        exists: true,
        rowCount: response.data.rows ? response.data.rows.length : 0
      };
    } catch (error) {
      results[table] = {
        exists: false,
        error: error.message
      };
    }
  }

  res.json({
    baseUUID: SEA_TABLE_BASE_UUID,
    tables: results,
    recommendations: Object.values(results).some(r => !r.exists) ? [
      '–°–æ–∑–¥–∞–π—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ Smolville',
      '–¢–∞–±–ª–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è: Events, Ads, Votings'
    ] : ['‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç!']
  });
});

app.listen(port, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  console.log(`üîó UUID –±–∞–∑—ã: ${SEA_TABLE_BASE_UUID}`);
  console.log(`üîë –¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω: ${SEATABLE_API_TOKEN.substring(0, 8)}...`);
  console.log('');
  console.log('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ API —Ç–æ–∫–µ–Ω–∞');
  console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ /api/test-token');
  console.log('3. –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Render');
});
