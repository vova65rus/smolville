const express = require('express');
const axios = require('axios');
const multer = require('multer');
const fs = require('fs');
const FormData = require('form-data');
const path = require('path');

const app = express();
const port = process.env.PORT || 3000;

// Middleware –¥–ª—è CORS
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
  
  if (req.method === 'OPTIONS') {
    return res.sendStatus(200);
  }
  next();
});

app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

const upload = multer({ 
  dest: 'uploads/',
  limits: {
    fileSize: 10 * 1024 * 1024,
  }
});

// ==================== –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –°–û–ó–î–ê–ù–ò–Æ –ù–û–í–û–ô –ë–ê–ó–´ ====================

app.get('/', (req, res) => {
  res.send(`
    <html>
      <head><title>Smolville - –ù–æ–≤–∞—è –±–∞–∑–∞</title></head>
      <body>
        <h1>üöÄ –°–û–ó–î–ê–ô–¢–ï –ù–û–í–£–Æ –ë–ê–ó–£ SEA TABLE</h1>
        
        <div style="background: #e8f5e8; padding: 20px; border-radius: 10px; margin: 20px 0;">
          <h2 style="color: #2e7d32;">‚úÖ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!</h2>
          <p>–¢–µ–∫—É—â–∏–π API —Ç–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –±–∞–∑—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.</p>
        </div>

        <h2>üìã –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h2>
        
        <div style="border: 2px solid #2196f3; padding: 15px; border-radius: 8px; margin: 15px 0;">
          <h3>üéØ –®–ê–ì 1: –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –±–∞–∑—É</h3>
          <ol>
            <li>–ó–∞–π–¥–∏—Ç–µ –≤ <a href="https://cloud.seatable.io" target="_blank">SeaTable</a></li>
            <li>–ù–∞–∂–º–∏—Ç–µ <strong>"+ –ù–æ–≤–∞—è –±–∞–∑–∞"</strong> (–Ω–µ —Ç–∞–±–ª–∏—Ü–∞!)</li>
            <li>–ù–∞–∑–æ–≤–∏—Ç–µ –±–∞–∑—É: <strong>"Smolville-App"</strong></li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å"</li>
          </ol>
        </div>

        <div style="border: 2px solid #4caf50; padding: 15px; border-radius: 8px; margin: 15px 0;">
          <h3>üìä –®–ê–ì 2: –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã</h3>
          <p>–í –Ω–æ–≤–æ–π –±–∞–∑–µ —Å–æ–∑–¥–∞–π—Ç–µ 3 —Ç–∞–±–ª–∏—Ü—ã:</p>
          <ul>
            <li><strong>Events</strong> - –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</li>
            <li><strong>Ads</strong> - –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π</li>
            <li><strong>Votings</strong> - –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π</li>
          </ul>
          <p>–î–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–∂–¥—É—é —Ç–∞–±–ª–∏—Ü—É.</p>
        </div>

        <div style="border: 2px solid #ff9800; padding: 15px; border-radius: 8px; margin: 15px 0;">
          <h3>üîë –®–ê–ì 3: –°–æ–∑–¥–∞–π—Ç–µ API —Ç–æ–∫–µ–Ω</h3>
          <ol>
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±—É—é —Ç–∞–±–ª–∏—Ü—É (Events, Ads –∏–ª–∏ Votings)</li>
            <li>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ <strong>—à–µ—Å—Ç–µ—Ä–µ–Ω–∫—É</strong> —Ä—è–¥–æ–º —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–∞–±–ª–∏—Ü—ã</li>
            <li>–í—ã–±–µ—Ä–∏—Ç–µ <strong>"–í–Ω–µ—à–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"</strong></li>
            <li>–ù–∞–∂–º–∏—Ç–µ <strong>"API —Ç–æ–∫–µ–Ω"</strong></li>
            <li>–ù–∞–∂–º–∏—Ç–µ <strong>"–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω"</strong></li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω</li>
          </ol>
        </div>

        <div style="border: 2px solid #9c27b0; padding: 15px; border-radius: 8px; margin: 15px 0;">
          <h3>‚öôÔ∏è –®–ê–ì 4: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h3>
          <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ Render —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:</p>
          <pre style="background: #f5f5f5; padding: 15px; border-radius: 5px;">
SEATABLE_API_TOKEN=–í–ê–®_–ù–û–í–´–ô_–¢–û–ö–ï–ù
SEATABLE_BASE_UUID=Smolville-App
RADIKAL_API_KEY=–≤–∞—à_–∫–ª—é—á_radikal
          </pre>
          <p><strong>–í–∞–∂–Ω–æ:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–º—è –±–∞–∑—ã –∫–∞–∫ Base UUID!</p>
        </div>

        <h3>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:</h3>
        <p>–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ:</p>
        <ul>
          <li><a href="/api/test-connection">/api/test-connection</a> - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</li>
          <li><a href="/api/test-manual">/api/test-manual</a> - –†—É—á–Ω–æ–π —Ç–µ—Å—Ç —Å —Ç–æ–∫–µ–Ω–æ–º</li>
        </ul>

        <div style="background: #fff3e0; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <h3>üí° –ü–æ—á–µ–º—É —ç—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç:</h3>
          <ul>
            <li>–ù–æ–≤–∞—è –±–∞–∑–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —á–∏—Å—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</li>
            <li>API —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –±–∞–∑—ã –∫–∞–∫ UUID - —ç—Ç–æ –ø—Ä–æ—â–µ –∏ –Ω–∞–¥–µ–∂–Ω–µ–µ</li>
            <li>–ò–∑–±–µ–≥–∞–µ–º –≤—Å–µ—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π</li>
          </ul>
        </div>
      </body>
    </html>
  `);
});

// ==================== API –î–õ–Ø –ù–û–í–û–ô –ë–ê–ó–´ ====================

class SeaTableAPI {
  constructor(serverUrl, apiToken, baseName) {
    this.baseURL = `${serverUrl}/api/v2.1/dtable/app-api/${baseName}`;
    this.apiToken = apiToken;
  }

  getHeaders() {
    return {
      'Authorization': `Token ${this.apiToken}`,
      'Content-Type': 'application/json'
    };
  }

  async makeRequest(method, endpoint, data = null) {
    try {
      const url = `${this.baseURL}${endpoint}`;
      console.log(`üåä SeaTable API: ${method} ${url}`);
      
      const config = {
        method,
        url,
        headers: this.getHeaders(),
        timeout: 10000
      };

      if (data) {
        config.data = data;
      }

      const response = await axios(config);
      console.log(`‚úÖ SeaTable API —É—Å–ø–µ—à–Ω–æ: ${method} ${endpoint}`);
      return response.data;
      
    } catch (error) {
      console.error(`‚ùå SeaTable API –æ—à–∏–±–∫–∞:`, error.message);
      throw error;
    }
  }

  async listRows(tableName) {
    return this.makeRequest('GET', `/rows/?table_name=${encodeURIComponent(tableName)}`);
  }

  async insertRow(tableName, rowData) {
    return this.makeRequest('POST', '/rows/', {
      table_name: tableName,
      row: rowData
    });
  }

  async updateRow(tableName, rowId, rowData) {
    return this.makeRequest('PUT', '/rows/', {
      table_name: tableName,
      row_id: rowId,
      row: rowData
    });
  }

  async deleteRow(tableName, rowId) {
    return this.makeRequest('DELETE', '/rows/', {
      table_name: tableName,
      row_id: rowId
    });
  }
}

// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ–π –±–∞–∑—ã
app.get('/api/test-connection', async (req, res) => {
  const SEATABLE_API_TOKEN = process.env.SEATABLE_API_TOKEN;
  const SEATABLE_BASE_NAME = process.env.SEATABLE_BASE_UUID || 'Smolville-App';

  if (!SEATABLE_API_TOKEN) {
    return res.json({
      success: false,
      error: 'API —Ç–æ–∫–µ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –±–∞–∑—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SEATABLE_API_TOKEN –≤ Render.'
    });
  }

  try {
    const seatableAPI = new SeaTableAPI('https://cloud.seatable.io', SEATABLE_API_TOKEN, SEATABLE_BASE_NAME);
    
    const tables = ['Events', 'Ads', 'Votings'];
    const results = {};

    for (const table of tables) {
      try {
        const data = await seatableAPI.listRows(table);
        results[table] = {
          success: true,
          count: data.rows ? data.rows.length : 0,
          sample: data.rows ? data.rows.slice(0, 2) : []
        };
      } catch (error) {
        results[table] = {
          success: false,
          error: error.message
        };
      }
    }

    const allSuccess = Object.values(results).every(r => r.success);
    
    res.json({
      success: allSuccess,
      message: allSuccess ? 'üéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ì–û–¢–û–í–û!' : '–ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏',
      config: {
        baseName: SEATABLE_BASE_NAME,
        apiToken: `${SEATABLE_API_TOKEN.substring(0, 8)}...`
      },
      results: results,
      nextSteps: allSuccess ? [
        '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!',
        '–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ.',
        '–î–æ–±–∞–≤–ª—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å SeaTable.'
      ] : [
        '–°–æ–∑–¥–∞–π—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ Smolville-App',
        '–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ API —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: Events, Ads, Votings'
      ]
    });

  } catch (error) {
    res.status(500).json({
      success: false,
      error: error.message,
      instructions: [
        '1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –±–∞–∑—É "Smolville-App" –≤ SeaTable',
        '2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã Events, Ads, Votings',
        '3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã',
        '4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SEATABLE_API_TOKEN –≤ Render'
      ]
    });
  }
});

// –†—É—á–Ω–æ–π —Ç–µ—Å—Ç —Å –≤–≤–æ–¥–æ–º —Ç–æ–∫–µ–Ω–∞
app.get('/api/test-manual', async (req, res) => {
  const token = req.query.token;
  const baseName = req.query.base || 'Smolville-App';

  if (!token) {
    return res.json({
      error: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /api/test-manual?token=–í–ê–®_–ù–û–í–´–ô_–¢–û–ö–ï–ù&base=–ò–ú–Ø_–ë–ê–ó–´'
    });
  }

  try {
    const seatableAPI = new SeaTableAPI('https://cloud.seatable.io', token, baseName);
    const data = await seatableAPI.listRows('Events');

    res.json({
      success: true,
      message: '‚úÖ –ù–û–í–´–ô –¢–û–ö–ï–ù –†–ê–ë–û–¢–ê–ï–¢!',
      config: {
        baseName: baseName,
        token: `${token.substring(0, 8)}...`
      },
      data: {
        eventsCount: data.rows ? data.rows.length : 0,
        sample: data.rows ? data.rows.slice(0, 2) : []
      },
      nextSteps: [
        `–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤ Render: SEATABLE_API_TOKEN=${token}`,
        `–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤ Render: SEATABLE_BASE_UUID=${baseName}`,
        '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
      ]
    });

  } catch (error) {
    res.status(500).json({
      success: false,
      error: error.message,
      instructions: [
        '1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–∞–∑–∞ "Smolville-App" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        '2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ "Events" —Å–æ–∑–¥–∞–Ω–∞',
        '3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ API —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã',
        '4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω —Ç–æ–∫–µ–Ω'
      ]
    });
  }
});

// ==================== –û–°–ù–û–í–ù–û–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï ====================

// Health check
app.get('/health', (req, res) => {
  res.json({ 
    status: 'READY', 
    message: '–°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–≤–æ–π –±–∞–∑—ã',
    timestamp: new Date().toISOString()
  });
});

// Radikal upload (–±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã)
app.post('/api/upload', upload.single('image'), async (req, res) => {
  try {
    if (!req.file) {
      return res.status(400).json({ error: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ' });
    }
    
    const RADIKAL_API_KEY = process.env.RADIKAL_API_KEY;
    if (!RADIKAL_API_KEY) {
      return res.status(500).json({ error: 'RADIKAL_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' });
    }
    
    const filePath = req.file.path;
    const fileBuffer = fs.readFileSync(filePath);
    
    const formData = new FormData();
    formData.append('source', fileBuffer, {
      filename: req.file.originalname || `upload_${Date.now()}.jpg`,
      contentType: req.file.mimetype
    });

    const response = await axios.post('https://radikal.cloud/api/1/upload', formData, {
      headers: {
        'X-API-Key': RADIKAL_API_KEY,
        ...formData.getHeaders(),
      },
      timeout: 30000
    });

    const imageData = response.data.image || response.data;
    const url = imageData.url || imageData.image_url;
    
    if (!url) {
      throw new Error('URL –Ω–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç Radikal API');
    }

    // –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    try {
      fs.unlinkSync(filePath);
    } catch (unlinkError) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', unlinkError.message);
    }
    
    res.json({ 
      success: true,
      url: url,
      fileId: imageData.id_encoded || imageData.name
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error.message);
    if (req.file) {
      try {
        fs.unlinkSync(req.file.path);
      } catch (unlinkError) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', unlinkError.message);
      }
    }
    res.status(500).json({ 
      success: false,
      error: error.message 
    });
  }
});

app.listen(port, () => {
  console.log(`üöÄ –°–ï–†–í–ï–† –ó–ê–ü–£–©–ï–ù –ù–ê –ü–û–†–¢–£ ${port}`);
  console.log('');
  console.log('üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:');
  console.log('1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –±–∞–∑—É "Smolville-App" –≤ SeaTable');
  console.log('2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã Events, Ads, Votings');
  console.log('3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã');
  console.log('4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Render');
  console.log('');
  console.log('üîó –û—Ç–∫—Ä–æ–π—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏');
});
